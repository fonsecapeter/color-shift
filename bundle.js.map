{"version":3,"sources":["webpack:///webpack/bootstrap bf7efded57c43250d1e0","webpack:///./lib/shape_shift.js","webpack:///./lib/game_view.js","webpack:///./lib/game.js","webpack:///./lib/player.js","webpack:///./lib/moving_shape.js","webpack:///./lib/util.js","webpack:///./lib/constants.js","webpack:///./lib/shape.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACXA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB,qBAAqB,EAAE,EAAE;AAC3C,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACvDA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACrEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA2C;;AAE3C;AACA,2BAA0B;AAC1B,kCAAiC,2BAA2B;AAC5D,MAAK,OAAO;AACZ,kCAAiC,2BAA2B;AAC5D;AACA,IAAG;AACH,2BAA0B;AAC1B,kCAAiC,2BAA2B;AAC5D,MAAK,OAAO;AACZ,kCAAiC,2BAA2B;AAC5D;AACA;AACA;;AAEA;AACA;AACA,aAAY,6BAA6B;AACzC,IAAG;AACH,aAAY,8BAA8B;;AAE1C,IAAG;AACH,aAAY,6BAA6B;AACzC,IAAG;AACH,aAAY,8BAA8B;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACpHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACRA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bf7efded57c43250d1e0\n **/","const GameView = require('./game_view');\n\nconst canvasEl = document.getElementById(\"main\");\n\n// canvasEl.width = window.innerWidth;\n// canvasEl.height = window.innerHeight;\n\ncanvasEl.width = viewportSize.getWidth() - 5;\ncanvasEl.height = viewportSize.getHeight() - 4;\n\nconst ctx = canvasEl.getContext('2d');\nconst gameView = new GameView(canvasEl.width, canvasEl.height).start(ctx);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/shape_shift.js\n ** module id = 0\n ** module chunks = 0\n **/","const Game = require('./game');\nconst Player = require('./player');\n\nfunction GameView(dimX, dimY) {\n  this.dimX = dimX;\n  this.dimY = dimY;\n  this.playing = false;\n}\n\nGameView.MOVES = {\n  'w':     [ 0,  -0.2],\n  'up':    [ 0,  -0.2],\n  'a':     [-0.2, 0],\n  'left':  [-0.2, 0],\n  's':     [ 0,   0.2],\n  'down':  [ 0,   0.2],\n  'd':     [ 0.2, 0],\n  'right': [ 0.2, 0]\n};\n\nGameView.prototype.mapKeyHandlers = function () {\n  const player = this.player;\n\n  Object.keys(GameView.MOVES).forEach( k => {\n    const move = GameView.MOVES[k];\n    key(k, () => { player.thrust(move); }); // vendor/keymaster.js\n  });\n};\n\nGameView.prototype.start = function (ctx) {\n  this.game = new Game(this.dimX, this.dimY);\n  this.player = this.game.player;\n  this.playing = true;\n\n  if (this.cycle) {\n    clearInterval(this.cycle);\n  }\n\n  this.mapKeyHandlers();\n\n  requestAnimationFrame(this.cycle.bind(this, ctx));\n};\n\nGameView.prototype.cycle = function (ctx) {\n  this.game.step();\n  this.game.render(ctx);\n  this.isGameOver();\n\n  requestAnimationFrame(this.cycle.bind(this, ctx));\n};\n\nGameView.prototype.isGameOver = function () {\n  return false;\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 1\n ** module chunks = 0\n **/","const Player = require('./player');\nconst Shape = require('./shape');\nconst Util = require('./util');\n\nconst NUM_SHAPES = 40;\n\nfunction Game (dimX, dimY) {\n  this.dimX = dimX;\n  this.dimY = dimY;\n  this.shapes = [];\n\n  for (let i = 0; i < NUM_SHAPES; i++) {\n    this.addShape();\n  }\n\n  const playerPos = [(dimX / 2), (dimY / 2)];\n  this.player = new Player(playerPos, this);\n\n  this.allShapes = this.shapes.concat([this.player]);\n}\n\nGame.prototype.step = function () {\n  this.isOver();\n  this.moveShapes();\n  this.checkCollisions();\n};\n\nGame.prototype.render = function (ctx) {\n  ctx.clearRect(0, 0, this.dimX, this.dimY);\n\n  this.allShapes.forEach( shape => {\n    shape.render(ctx);\n  });\n};\n\nGame.prototype.checkCollisions = function () {\n  //\n};\n\nGame.prototype.moveShapes = function () {\n  this.allShapes.forEach( shape => {\n    shape.move();\n  });\n};\n\nGame.prototype.addShape = function (pos, velocity, radius) {\n  if (!pos) {\n    pos = Util.randomPos(this.dimX, this.dimY);\n    this.shapes.push(new Shape(pos, this));\n  } else {\n    this.shape.push(new Shape(pos, this, radius, velocity));\n  }\n};\n\nGame.removeShape = function (shape) {\n  const idx = this.allShapes.indexOf(shape);\n  if (idx > -1) {\n    this.allShapes.splice(idx, 1);\n  }\n};\n\nGame.prototype.isOver = function () {\n  if (this.allShapes.indexOf(this.player) === -1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 2\n ** module chunks = 0\n **/","const MovingShape = require('./moving_shape');\nconst Util = require('./util');\nconst Constants = require('./constants.js');\n\nconst RADIUS = 16;\nconst VELOCITY = [0, 0];\n\nconst Player = function (pos, game) {\n  this.isPlayer = true;\n  this.color = Constants.COLORS.bright;\n  MovingShape.call(this, pos, VELOCITY, RADIUS, this.color, game);\n};\n\nUtil.inherits(Player, MovingShape);\n\nPlayer.prototype.thrust = function (impulse) {\n  this.velocity[0] += impulse[0];\n  this.velocity[1] += impulse[1];\n};\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player.js\n ** module id = 3\n ** module chunks = 0\n **/","// const Util = require('./util');\n\nfunction MovingShape (pos, velocity, radius, color, game) {\n  this.pos = pos;\n  this.velocity = velocity;\n  this.radius = radius;\n  this.color = color;\n  this.game = game;\n}\n\nMovingShape.prototype.render = function (ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,0,\n    2 * Math.PI,\n    false\n  );\n\n  if (this.isPlayer) {\n    ctx.lineWidth = 6;\n    ctx.strokeStyle = this.color;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n\n};\n\nMovingShape.prototype.move = function () {\n  this.ensureBounce(this.pos);\n  // if ((Math.abs(this.velocity[0]) < 1) &&\n  //     (Math.abs(this.velocity[1]) < 1 )) {\n  //       this.velocity = Util.randomVec();\n  //     }\n  this.windResit(this.velocity);\n\n  this.pos[0] = this.pos[0] + (this.velocity[0]);\n  this.pos[1] = this.pos[1] + (this.velocity[1]);\n};\n\nMovingShape.prototype.windResit = function () {\n  const signage = [\n    (this.velocity[0] < 0) ? -1 : 1,\n    (this.velocity[1] < 0) ? -1 : 1\n  ];\n\n  const drag = [\n    Math.pow(this.velocity[0], 2) * this.radius * 0.0002 * signage[0],\n    Math.pow(this.velocity[1], 2) * this.radius * 0.0002 * signage[1]\n  ];\n\n  this.velocity = [\n    this.velocity[0] - drag[0],\n    this.velocity[1] - drag[1]\n  ];\n};\n\n// at canvas boundries\nMovingShape.prototype.ensureBounce = function (pos) {\n  const bounce = this.outOfBounds(pos) || { axis: null, negative: false };\n\n  if (bounce.axis === 'x') {\n    if (bounce.negative) { // moving left\n      if (this.velocity[0] < 0) { this.velocity[0] *= -0.95; }\n    } else {                         // moving right\n      if (this.velocity[0] > 0) { this.velocity[0] *= -0.95; }\n    }\n  } else if (bounce.axis === 'y') {\n    if (bounce.negative) { // moving up\n      if (this.velocity[1] < 0) { this.velocity[1] *= -0.95; }\n    } else {                         // moving down\n      if (this.velocity[1] > 0) { this.velocity[1] *= -0.95; }\n    }\n  }\n};\n\nMovingShape.prototype.outOfBounds = function (pos) {\n  if ((pos[0] - this.radius) <= 0) {\n    return { axis: 'x', negative: true };    // left\n  } else if ((pos[0] + this.radius) >= this.game.dimX) {\n    return { axis: 'x', negative: false };   // right\n\n  } else if ((pos[1] - this.radius) <= 0) {\n    return { axis: 'y', negative: true };    // top\n  } else if ((pos[1] + this.radius) >= this.game.dimY) {\n    return { axis: 'y', negative: false };  //bottom\n  }\n};\n\nMovingShape.prototype.collidedWithPlayer = function () {\n  if (this.color === this.game.player.color) {\n    this.radius -= 1;\n\n    if (this.radius <= 1) {\n      this.game.removeShape(this);\n    }\n  }\n};\n\nMovingShape.prototype.isCollidedWith = function (other) {\n  const sumRadii = this.radius + other.radius;\n  const xDistance = Math.pow((this.pos[0] - other.pos[0]), 2);\n  const yDistance = Math.pow((this.pos[1] - other.pos[1]), 2);\n  const totDistance = Math.sqrt((xDistance + yDistance));\n\n  if (sumRadii > totDistance) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = MovingShape;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_shape.js\n ** module id = 4\n ** module chunks = 0\n **/","const Constants = require('./constants');\n\nconst Util = {\n  inherits (Child, Parent) {\n    function Surrogate(){}\n    Surrogate.constructor = Child;\n    Surrogate.prototype = Parent.prototype;\n    Child.prototype = new Surrogate();\n  },\n\n  randomVec (max) {\n    let x = (Math.random() * max);\n    let y = Math.sqrt(Math.pow(max, 2) - Math.pow(x, 2));\n\n    if (Math.random() > 0.5) {\n      x *= -1;\n    }\n    if (Math.random() > 0.5) {\n      y *= -1;\n    }\n\n    return [x, y];\n  },\n\n  randomColor () {\n    const codes = Object.keys(Constants.COLORS);\n    const codeSample = codes[Math.floor(Math.random() * Object.keys(Constants.COLORS).length)];\n\n    return Constants.COLORS[codeSample];\n  },\n\n  randomPos (maxWidth, maxHeight) {\n    return [\n      Math.random() * maxWidth,\n      Math.random() * maxWidth\n    ];\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 5\n ** module chunks = 0\n **/","const Constants = {\n  COLORS: {\n    bright: \"#0cc9c7\",\n    medium: \"#369393\",\n    dim: \"#2e4852\"\n  }\n};\n\nmodule.exports = Constants;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/constants.js\n ** module id = 7\n ** module chunks = 0\n **/","const Util = require('./util');\nconst MovingShape = require('./moving_shape');\nconst Player = require('./player');\n\nconst Shape = function (pos, game, radius, velocity, color) {\n  if (!velocity) {\n    velocity = Util.randomVec(((Math.random() * 0.3) + 0.001));\n  }\n\n  radius = radius || (Math.random() * 10) + 10;\n\n  color = color || Util.randomColor();\n\n  MovingShape.call(this, pos, velocity, radius, color, game);\n};\n\nUtil.inherits(Shape, MovingShape);\n\nmodule.exports = Shape;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/shape.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}